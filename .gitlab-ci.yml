variables:
#  CI_DEBUG_TRACE: "true"

stages:
  - db
  - build
  - deploy
  - life

before_script:
  - export COMMIT=`echo ${CI_COMMIT_SHA} | cut -c 1-8`

backup-db-prod:
  stage: db
  when: always
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  only:
    - master
  script:
    - echo "*** Do a datanbase backup"
    - mysqldump --default-character-set=binary -h${WP_DB_HOST_PROD} -u${WP_DB_USER_PROD} -p${WP_DB_PASSWORD_PROD} ${WP_DB_NAME_PROD} | gzip > ./${COMMIT}.sql.gz
    - aws s3 cp ./${COMMIT}.sql.gz s3://${DB_BACKUP_S3}/${CI_PROJECT_PATH_SLUG}/${COMMIT}.sql.gz

restore-db-prod:
  stage: db
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  only:
    - master
  script:
    - echo "*** Do a datanbase rollback"
    - aws s3 cp s3://${DB_BACKUP_S3}/${CI_PROJECT_PATH_SLUG}/${COMMIT}.sql.gz ./
    - cat ./${COMMIT}.sql.gz | gunzip | mysql --default-character-set=binary -h${WP_DB_HOST_PROD} -u${WP_DB_USER_PROD} -p${WP_DB_PASSWORD_PROD} ${WP_DB_NAME_PROD}

clone-db-prod2dev:
  stage: db
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  script:
    - echo "*** Do a hot datanbase clone Prod->Dev"
    - mysqldump --default-character-set=binary -h${WP_DB_HOST_PROD} -u${WP_DB_USER_PROD} -p${WP_DB_PASSWORD_PROD} ${WP_DB_NAME_PROD} | mysql --default-character-set=binary -h${WP_DB_HOST_DEV} -u${WP_DB_USER_DEV} -p${WP_DB_PASSWORD_DEV} -D ${WP_DB_NAME_DEV}
    - /usr/local/srdb/srdb.cli.php -h ${WP_DB_HOST_DEV} -u ${WP_DB_USER_DEV} -p ${WP_DB_PASSWORD_DEV} -n ${WP_DB_NAME_DEV} -s "${URL_PROD}" -r "${URL_DEV}"

clone-db-dev2prod:
  stage: db
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  only:
    - master
  script:
    - echo "*** Do a hot datanbase clone Prod->Dev"
    - mysqldump --default-character-set=binary -h${WP_DB_HOST_DEV} -u${WP_DB_USER_DEV} -p${WP_DB_PASSWORD_DEV} ${WP_DB_NAME_DEV} | mysql --default-character-set=binary -h${WP_DB_HOST_PROD} -u${WP_DB_USER_PROD} -p${WP_DB_PASSWORD_PROD} -D ${WP_DB_NAME_PROD}
    - /usr/local/srdb/srdb.cli.php -h ${WP_DB_HOST_PROD} -u ${WP_DB_USER_PROD} -p ${WP_DB_PASSWORD_PROD} -n ${WP_DB_NAME_PROD} -s "${URL_DEV}" -r "${URL_PROD}"

build-prod:
  stage: build
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  only:
    - master
  script:
    - export WP_CONFIG="${WP_CONFIG_PROD}"
    - export IMAGE_TAG="prod-${COMMIT}"
    - export REPOSITORY="wp-pilot"
    - 'curl -s -H "PRIVATE-TOKEN: ${SCRIPTS_TOKEN}" https://gitlab-ci.sactech.org/api/v4/projects/7/repository/files/build-wordpress.sh/raw?ref=master | bash'

build-dev:
  stage: build
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  script:
    - export WP_CONFIG="${WP_CONFIG_DEV}"
    - export IMAGE_TAG="dev-${COMMIT}"
    - export REPOSITORY="wp-pilot"
    - 'curl -s -H "PRIVATE-TOKEN: ${SCRIPTS_TOKEN}" https://gitlab-ci.sactech.org/api/v4/projects/7/repository/files/build-wordpress.sh/raw?ref=master | bash'

deploy-prod:
  stage: deploy
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  only:
    - master
  environment:
    name: production
    url: ${URL_PROD}
  script:
    - ecs-deploy --use-latest-task-def --cluster "${ECS_CLUSTER_PROD}" --service-name "${ECS_SERVICE_PROD}" --image "any" --tag-only "prod-${COMMIT}" --region "${AWS_DEFAULT_REGION}" --timeout 600

deploy-dev:
  stage: deploy
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  environment:
    name: development
    url: ${URL_DEV}
  script:
    - ecs-deploy --use-latest-task-def --cluster "${ECS_CLUSTER_DEV}" --service-name "${ECS_SERVICE_DEV}" --image "any" --tag-only "dev-${COMMIT}" --region "${AWS_DEFAULT_REGION}" --timeout 600

syncback-prod:
  stage: life
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  only:
    - master
  script:
    - export ECS_SERVICE="${ECS_SERVICE_PROD}"
    - 'curl -s -H "PRIVATE-TOKEN: ${SCRIPTS_TOKEN}" https://gitlab-ci.sactech.org/api/v4/projects/7/repository/files/syncback-fargate.sh/raw?ref=master | bash'

stop-prod:
  stage: life
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  only:
    - master
  script:
    - aws ecs update-service --cluster "${ECS_CLUSTER_PROD}" --service "${ECS_SERVICE_PROD}" --desired-count 0 --deployment-configuration '{"maximumPercent":100,"minimumHealthyPercent":50}'

start-prod:
  stage: life
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  only:
    - master
  script:
    - aws ecs update-service --cluster "${ECS_CLUSTER_PROD}" --service "${ECS_SERVICE_PROD}" --desired-count 1 --deployment-configuration '{"maximumPercent":200,"minimumHealthyPercent":100}'

stop-dev:
  stage: life
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  script:
    - aws ecs update-service --cluster "${ECS_CLUSTER_DEV}" --service "${ECS_SERVICE_DEV}" --desired-count 0 --deployment-configuration '{"maximumPercent":100,"minimumHealthyPercent":50}'

start-dev:
  stage: life
  when: manual
  image: ${CI_REGISTRY}/admins/images/gitlab-worker
  tags:
    - worker
  script:
    - aws ecs update-service --cluster "${ECS_CLUSTER_DEV}" --service "${ECS_SERVICE_DEV}" --desired-count 1 --deployment-configuration '{"maximumPercent":200,"minimumHealthyPercent":100}'
